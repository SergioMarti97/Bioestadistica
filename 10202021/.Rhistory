library(readxl)
leukemia <- read_excel("C:/Users/fenix/Desktop/bioestadística/10202021/leukemia.xlsx")
View(leukemia)
View(leukemia)
View(leukemia)
leukemia$Y <- factor(leukemia$Y, levels=0:1, labels = c("ALL", "AML"))
View(leukemia)
t.test(leukemia$x.3395, mu=0)
t.test(leukemia$x.3395[leukemia$Y == 'ALL'], mu=0)
t.test(leukemia$x.3395[leukemia$Y == 'AML'], mu=0)
t.test(leukemia$x.1040[leukemia$Y = 'ALL'], mu>=0)
t.test(leukemia$x.1040[leukemia$Y = 'ALL'], mu=>0)
t.test(leukemia$x.1040[leukemia$Y = 'ALL'], mu=0)
t.test(leukemia$x.1040[leukemia$Y == 'ALL'], mu=0)
t.test(leukemia$x.1040[leukemia$Y == 'ALL'], mu=>0)
t.test(leukemia$x.1040[leukemia$Y == 'ALL'], alternative='greater', mu=0)
boxplot(leukemia$x.1040 ~ leukemia$Y)
boxplot(leukemia$x.1040 ~ leukemia$Y)
boxplot(leukemia$x.1040 ~ leukemia$Y, range=c(0.5, 2.5))
boxplot(leukemia$x.1040 ~ leukemia$Y, range=c(0.5, 2.5), notch = T)
boxplot(leukemia$x.1040 ~ leukemia$Y, range=c(0, 2.5))
boxplot(leukemia$x.1040 ~ leukemia$Y, ylab='Expresión', xlab='Enfermedades', main='Expresion del gen CCMD3 Cyclin D3')
vioplot(leukemia$x.1040 ~ leukemia$Y)
hist(leukemia$x.3395[leukemia$Y == 'ALL'])
hist(leukemia$x.3395[leukemia$Y == 'ALL'], ylim=25)
hist(leukemia$x.3395[leukemia$Y == 'ALL'], ylim=c(0, 25)
hist(leukemia$x.3395[leukemia$Y == 'ALL'], ylim=c(0, 25))
hist(leukemia$x.3395[leukemia$Y == 'ALL'], ylim=c(0, 25))
hist(leukemia$x.3395[leukemia$Y == 'ALL'], ylim=c(0, 25))
abline(h=0, col='blue', lty=3)
hist(leukemia$x.3395[leukemia$Y == 'ALL'], ylim=c(0, 25))
abline(v=0, col='blue', lty=3)
hist(leukemia$x.3395[leukemia$Y == 'ALL'], ylim=c(0, 25), min)
hist(leukemia$x.3395[leukemia$Y == 'ALL'], ylim=c(0, 25), main="Frecuencia de expresion del gen Gdf5 para pacientes con ALL")
hist(leukemia$x.3395[leukemia$Y == 'ALL'], ylim=c(0, 25), xlab="Niveles de expresión", ylab="Frecuencia", main="Frecuencia de expresion del gen Gdf5 para pacientes con ALL")
abline(v=mean(leukemia$x.3395[leukemia$Y == 'ALL']), col='blue', lty=3)
t.test(leukemia$x.3395[leukemia$Y == 'AML'], mu=0) #
hist(leukemia$x.3395[leukemia$Y == 'AML'], ylim=c(0, 25), xlab="Niveles de expresión", ylab="Frecuencia", main="Frecuencia de expresion del gen Gdf5 para pacientes con AML")
abline(v=mean(leukemia$x.3395[leukemia$Y == 'AML']), col='blue', lty=3)
hist(leukemia$x.3395[leukemia$Y == 'ALL'], ylim=c(0, 25), xlab="Niveles de expresión", ylab="Frecuencia", main="Frecuencia de expresion del gen Gdf5 para pacientes con ALL")
hist(leukemia$x.3395[leukemia$Y == 'AML'], ylim=c(0, 25), xlab="Niveles de expresión", ylab="Frecuencia", main="Frecuencia de expresion del gen Gdf5 para pacientes con AML")
hist(leukemia$x.3395[leukemia$Y == 'ALL'], ylim=c(0, 25), xlab="Niveles de expresión", ylab="Frecuencia", main="Frecuencia de expresion del gen Gdf5 para pacientes con ALL")
hist(leukemia$x.3395[leukemia$Y == 'AML'], ylim=c(0, 25), xlab="Niveles de expresión", ylab="Frecuencia", main="Frecuencia de expresion del gen Gdf5 para pacientes con AML")
hist(leukemia$x.3395[leukemia$Y == 'ALL'], ylim=c(0, 25), xlim=c(-1.5, 1.5), xlab="Niveles de expresión", ylab="Frecuencia", main="Frecuencia de expresion del gen Gdf5 para pacientes con ALL")
hist(leukemia$x.3395[leukemia$Y == 'AML'], ylim=c(0, 25), xlim=c(-1.5, 1.5), xlab="Niveles de expresión", ylab="Frecuencia", main="Frecuencia de expresion del gen Gdf5 para pacientes con AML")
t.test(leukemia$x.3395[leukemia$Y == 'ALL'], mu=0) # mu no es necesario ponerlo xq por defecto mu es 0
t.test(leukemia$x.3395[leukemia$Y == 'AML'], mu=0) #
o <- par(mfrow=c(2,1))
hist(leukemia$x.3395[leukemia$Y == 'ALL'], ylim=c(0, 25), xlim=c(-1.5, 1.5), xlab="Niveles de expresión", ylab="Frecuencia", main="Frecuencia de expresion del gen Gdf5 para pacientes con ALL")
abline(v=mean(leukemia$x.3395[leukemia$Y == 'ALL']), col='blue', lty=3)
hist(leukemia$x.3395[leukemia$Y == 'AML'], ylim=c(0, 25), xlim=c(-1.5, 1.5), xlab="Niveles de expresión", ylab="Frecuencia", main="Frecuencia de expresion del gen Gdf5 para pacientes con AML")
abline(v=mean(leukemia$x.3395[leukemia$Y == 'AML']), col='blue', lty=3)
par(o)
boxplot(leukemia$x.3395 ~ leukemia$Y, ylab='Expresión', xlab='Enfermedades', main='Expresion del gen Gdf5')
means <- aggregate(leukemia$x.3395, list(leukemia$Y), mean)
View(leukemia)
View(leukemia)
View(means)
means
boxplot(leukemia$x.3395 ~ leukemia$Y, ylab='Expresión', xlab='Enfermedades', main='Expresion del gen Gdf5')
means <- aggregate(leukemia$x.3395, list(leukemia$Y), mean)
points(x=1:nrow(means), y = means$x, col='blue', pch=16)
text(x=1:nrow(means), y=means$x - 0.20, labels = paste('Mean: ', round(means), col='black'))
text(x=1:nrow(means), y=means$x - 0.20, labels = paste('Mean: ', round(means)), col='black'))
text(x=1:nrow(means), y=means$x - 0.20, labels = paste('Mean: ', round(means, 1)), col='black'))
text(x=1:nrow(means), y=means$x - 0.20, labels = paste('Mean: ', round(means, 1)), col='black')
text(
x=1:nrow(means),
y=means$x,
labels = paste('Mean: ', round(means, 1)),
col='black')
text(
x=1:nrow(means),
#  y=means$x,
labels = paste('Mean: ', round(means, 1)),
col='black')
text(
x=1:nrow(means),
y=means$x,
#labels = paste('Mean: ', round(means, 1)),
col='black')
text(
x=1:nrow(means),
y=means$x - 0.25,
#labels = paste('Mean: ', round(means, 1)),
col='black')
boxplot(leukemia$x.3395 ~ leukemia$Y, ylim=c(-1.5, 1.5) ylab='Expresión', xlab='Enfermedades', main='Expresion del gen Gdf5')
boxplot(leukemia$x.3395 ~ leukemia$Y, ylim=c(-1.5, 1.5), ylab='Expresión', xlab='Enfermedades', main='Expresion del gen Gdf5')
text(
x=1:nrow(means),
y=means$x - 0.25,
labels = paste('Mean: ', round(means$x, 1)),
col='black')
points(x=1:nrow(means), y=means$x, col='blue', pch=16)
text(
x=1:nrow(means),
y=means$x - 0.25,
labels = paste('Media: ', round(means$x, 3)),
col='black')
boxplot(leukemia$x.1040 ~ leukemia$Y, ylab='Expresión', xlab='Enfermedades', main='Expresion del gen CCMD3 Cyclin D3')
var.test(leukemia$x.1040 ~ leukemia$Y)
boxplot(leukemia$x.1040 ~ leukemia$Y, ylab='Expresión', xlab='Enfermedades', main='Expresion del gen CCMD3 Cyclin D3')
means <- aggregate(leukemia$x.1040, list(leukemia$Y), mean)
points(x=1:nrow(means), y=means$x, col='blue', pch=16)
text(
x=1:nrow(means),
y=means$x - 0.25,
labels = paste('Media: ', round(means$x, 3)),
col='black')
load("C:/Users/fenix/Desktop/bioestadística/10202021/ElPulso.RData")
View(ElPulso)
View(ElPulso)
pulsoFumAntes = ElPulso$Pulse1[ElPulso$Fumar='Fuma']
pulsoFumAntes = ElPulso$Pulse1[ElPulso$Fumar=='Fuma']
pulsoFumDespu = ElPulso$Pulse2[ElPulso$Fumar=='Fuma']
# --- (1) Realizamos el test de varianzas ---
var.test(pulsoFumAntes, pulsoFumDespues)
# --- (1) Realizamos el test de varianzas ---
var.test(pulsoFumAntes, pulsoFumDespu)
# --- (2) Realizamos el test de medias ---
t.test(pulsoFumAntes, pulsoFumDespu)
# --- (2) Realizamos el test de medias ---
t.test(pulsoFumAntes, pulsoFumDespu, paired=T)
# --- (3) Podemos hacer un gráfico para verlo ---
boxplot(pulsoFumAntes, pulsoFumDespu, ylab='pulso', main='Comparación entre el puslo antes y después de la actividad fisica en fumadores')
means <- c(mean(pulsoFumAntes), mean(pulsoFumDespu))
points(x=1:nrow(means), y=means$x, col='blue', pch=16)
points(x=1:nrow(means), y=means$x, col='blue', pch=16)
points(x=1:2, y=means$x, col='blue', pch=16)
points(x=1:2, y=means, col='blue', pch=16)
text(
x=1:2,
y=means - 0.25,
labels = paste('Media: ', round(means, 3)),
col='black')
text(
x=1:2,
y=means - 10,
labels = paste('Media: ', round(means, 3)),
col='black')
text(
x=1:2,
y=means - 5,
labels = paste('Media: ', round(means, 3)),
col='black')
# --- (3) Podemos hacer un gráfico para verlo ---
boxplot(pulsoFumAntes, pulsoFumDespu, ylab='pulso', names=c('Antes', 'Después'), main='Comparación entre el puslo antes y después de la actividad fisica en fumadores')
means <- c(mean(pulsoFumAntes), mean(pulsoFumDespu))
points(x=1:2, y=means, col='blue', pch=16)
text(
x=1:2,
y=means - 5,
labels = paste('Media: ', round(means, 3)),
col='black')
# --- (3) Podemos hacer un gráfico para verlo ---
boxplot(pulsoFumAntes, pulsoFumDespu, ylab='pulso', names=c('Antes', 'Después'), main='Comparación entre el puslo antes y después de la actividad fisica en fumadores')
points(x=1:2, y=means, col='blue', pch=16)
text(
x=1:2,
y=means + 5,
labels = paste('Media: ', round(means, 3)),
col='black')
# --- (3) Podemos hacer un gráfico para verlo ---
boxplot(pulsoFumAntes, pulsoFumDespu, ylab='Pulsaciones / min', names=c('Antes', 'Después'), main='Comparación entre el puslo antes y después de la actividad fisica en fumadores')
points(x=1:2, y=means, col='blue', pch=16)
text(
x=1:2,
y=means + 5,
labels = paste('Media: ', round(means, 3)),
col='black')
# --- (3) Podemos hacer un gráfico para verlo ---
boxplot(pulsoFumAntes, pulsoFumDespu, ylim=c(45, 130) ylab='Pulsaciones / min', names=c('Antes', 'Después'), main='Comparación entre el puslo antes y después de la actividad fisica en fumadores')
# --- (3) Podemos hacer un gráfico para verlo ---
boxplot(pulsoFumAntes, pulsoFumDespu, ylim=c(45, 130), ylab='Pulsaciones / min', names=c('Antes', 'Después'), main='Comparación entre el puslo antes y después de la actividad fisica en fumadores')
# --- (3) Podemos hacer un gráfico para verlo ---
boxplot(pulsoFumAntes, pulsoFumDespu, ylim=c(45, 120), ylab='Pulsaciones / min', names=c('Antes', 'Después'), main='Comparación entre el puslo antes y después de la actividad fisica en fumadores')
# --- (3) Podemos hacer un gráfico para verlo ---
boxplot(pulsoFumAntes, pulsoFumDespu, ylim=c(40, 120), ylab='Pulsaciones / min', names=c('Antes', 'Después'), main='Comparación entre el puslo antes y después de la actividad fisica en fumadores')
points(x=1:2, y=means, col='blue', pch=16)
text(
x=1:2,
y=means + 5,
labels = paste('Media: ', round(means, 3)),
col='black')
# Inferencia no paramétrica: test de bondad de ajuste y QQ-plot
ks.test(leukemia$x.3395)
# Inferencia no paramétrica: test de bondad de ajuste y QQ-plot
ks.test(leukemia$x.3395, mu=mean(leukemia$x.3395), var=var(leukemia$x.3395))
# Inferencia no paramétrica: test de bondad de ajuste y QQ-plot
ks.test(leukemia$x.3395, "normal", mu=mean(leukemia$x.3395), var=var(leukemia$x.3395))
# Inferencia no paramétrica: test de bondad de ajuste y QQ-plot
ks.test(leukemia$x.3395, pnorm, mu=mean(leukemia$x.3395), var=var(leukemia$x.3395))
# Inferencia no paramétrica: test de bondad de ajuste y QQ-plot
ks.test(leukemia$x.3395, pn, mu=mean(leukemia$x.3395), var=var(leukemia$x.3395))
# Inferencia no paramétrica: test de bondad de ajuste y QQ-plot
ks.test(leukemia$x.3395, pnorm, mean(leukemia$x.3395), sd(leukemia$x.3395))
# Inferencia no paramétrica: test de bondad de ajuste y QQ-plot
ks.test(leukemia$x.3395, pnorm, mean(leukemia$x.3395), sd(leukemia$x.3395))
# Inferencia no paramétrica: test de bondad de ajuste y QQ-plot
ks.test(leukemia$x.3395, pnorm, mean(leukemia$x.3395), sd(leukemia$x.3395))
# Inferencia no paramétrica: test de bondad de ajuste y QQ-plot
ks.test(leukemia$x.3395[leukemia$Y==ALL], "norm", pch=20)
# Inferencia no paramétrica: test de bondad de ajuste y QQ-plot
ks.test(leukemia$x.3395[leukemia$Y=='ALL'], "norm", pch=20)
# Inferencia no paramétrica: test de bondad de ajuste y QQ-plot
ks.test(leukemia$x.3395[leukemia$Y=='ALL'], 'norm', pch=20)
qqplot(leukemia$x.3395);qqline(leukemia$x.3395, col=2)
qqnorm(leukemia$x.3395[leukemia$Y=='ALL']);qqline(leukemia$x.3395, col=2)
qqnorm(leukemia$x.3395[leukemia$Y=='AML']);qqline(leukemia$x.3395, col=2)
# ---
require(car)
qqPlot(leukemia$x.3395[leukemia$Y=='ALL'], "norm", pch=20, ylab="expresión génica", main="QQPlot")
qqPlot(leukemia$x.3395[leukemia$Y=='ALL'], "norm", pch=20, ylab="expresión génica", main="QQPlot")
boxplot(leukemia$x.1040 ~ leukemia$Y, ylab='Expresión', xlab='Enfermedades', main='Expresion del gen CCMD3 Cyclin D3')
pwd()
pwd
getpw()
getPw
rm(leukemia)
library(readxl)
leukemia <- read_excel("C:/Users/fenix/Desktop/bioestadística/10202021/leukemia.xlsx")
View(leukemia)
qqnorm(leukemia$x.3395[leukemia$Y=='ALL']);qqline(leukemia$x.3395, col=2)
qqnorm(leukemia$x.3395[leukemia$Y=='ALL']);qqline(leukemia$x.3395, col=2)
leukemia$x.3395
leukemia$x.3395[leukemia$Y=='ALL']
leukemia$x.3395[leukemia$Y=='ALL']
View(leukemia)
leukemia$Y <- factor(leukemia$Y, levels=0:1, labels = c("ALL", "AML"))
qqnorm(leukemia$x.3395[leukemia$Y=='ALL']);qqline(leukemia$x.3395, col=2)
ks.test(leukemia$x.3395[leukemia$Y=='ALL'], 'norm', pch=20)
ks.test(leukemia$x.3395[leukemia$Y=='ALL'], 'norm')
ks.test(leukemia$x.3395[leukemia$Y=='ALL'], 'norm', mean(leukemia$x.3395[leukemia$Y=='ALL']), sd(leukemia$x.3395[leukemia$Y=='ALL']))
# ---
require(car)
qqPlot(leukemia$x.3395[leukemia$Y=='ALL'], "norm", pch=20, ylab="expresión génica", main="QQPlot")
rm(ElPulso)
rm(o)
rm(i)
rm(means)
rm(pulsoFumAntes)
rm(pulsoFumDespu)
rm(x)
save.image("C:/Users/fenix/Desktop/bioestadística/10202021/leukemia.RData")
View(leukemia)
