getwd()
o = par(mfrow=c(2,1))
x = 0:3
plot(x, dbinom(x, size=3, prob=0.25), xlab="n. éxitos", ylab="probabilidad", xlim=c(0,3), main="Func. Probabilidad")
points(x, dbinom(x, size=3, prob=0.25), pch=16, col="green")
abline(h=0, col="blue", lty=3)
abline(h=0, col="blue", lty=3)
pbinom(1, size = 3, prob = 0.25, lower.tail = F)
rm(x)
# POISON
# X=nº de niños con ojos azules nacidos en una hora ~ Poison (lambda = 10)
x = 0:50 # Nace 50 niños
dpois(x, lambda = 10) # Probabilidad
# POISON
# X=nº de niños con ojos azules nacidos en una hora ~ Poison (lambda = 10)
x = 0:20 # Nace 50 niños
dpois(x, lambda = 10) # Probabilidades
curve(dpois(x, lambda = 10), from=0, to=20, n=21, xlab="n. éxitos", ylab="probabilidad", xlim=c(0,50), main="Func. Probabilidad Poisson")
points(x, dpois(x, lambda = 10), pch=16, type=h)
points(x, dpois(x, lambda = 10), pch=16, col="green")
abline(h=0, col="blue", lty=3)
curve(dpois(x, lambda = 10), from=0, to=20, n=21, xlab="n. éxitos", ylab="probabilidad", xlim=c(0,50), main="Func. Probabilidad Poisson", type=h)
curve(dpois(x, lambda = 10), from=0, to=20, n=21, xlab="n. éxitos", ylab="probabilidad", xlim=c(0,50), main="Func. Probabilidad Poisson", type="h")
points(x, dpois(x, lambda = 10), pch=16, col="green")
abline(h=0, col="blue", lty=3)
plot(x, ppois(x, lambda=10), xlab="n. éxitos", ylab="probabilidad acumulada",main="Func. Distribución Poisson acumulada", type="s")
curve(dpois(x, lambda = 10), from=0, to=20, n=21, xlab="n. éxitos", ylab="probabilidad", xlim=c(0,50), main="Func. Probabilidad Poisson", type="h")
points(x, dpois(x, lambda = 10), pch=16, col="green")
abline(h=0, col="blue", lty=3)
par(o)
# X= nº de hijos con ojos marrones antes de tener 1 hijo con ojos azules ~ G(p=0.25)
# Probabilidad de que la familia acabe teniendo 3 o más hijos
pgeom(2, 0.25, lower.tail = F)
# La distribución de los valores de expresión del gen Zyxin en paciente ALL sigue una N(mu=1.5, sigma=0.5)
# 1. Representar la función de densidad y la función de distribución
rm(x)
x=seq(-0.5, 3.5, length = 10000)
par(mfrow=c(2,1))
plot(x, dnorm(x, mean=1.5, sd=0.5), xlab="x", ylab="densidad", main="Func. Densidad", type="l")
abline(v=1.5, col="magenta", lty=3, lwd=5)
plot(x, pnorm(x, mean=1.5, sd=0.5), xlab="x", ylab="probabilidad", main="Func. Probabilidad", type="l")
par(par(mfrow=c(2,1)))
# 2. Cual es la probabilidad de que los valores de expresion sean menores que 1.2?
pnorm(1.2, mean=1.5, sd=0.5)
# 3. Cual es la probabilidad de que los valores de expresion sean mayores que 1.2?
1 - pnorm(1.2, mean=1.5, sd=0.5)
# 4. Cual es la probabilidad de que los valores de expresion esten entre 0.8 y 2.4?
pnorm(2.4, mean=1.5, sd=0.5) - pnorm(0.8, mean=1.5, sd=0.5)
# 5. Genera una muestra aleatoria de tamaño 100 de la población dada,
# esto es, que se distribua segun una normal de parametros con media = 1.5 y desviación tipica = 0.5
rnorm(1000, 1.5, 0.5)
set.seed(12345)
# 5. Genera una muestra aleatoria de tamaño 100 de la población dada,
# esto es, que se distribua segun una normal de parametros con media = 1.5 y desviación tipica = 0.5
rnorm(1000, 1.5, 0.5)
getwd()
load("C:/Users/fenix/Documents/10132021_bioestadistica/DataMaster_2021.RData")
library(spikeslab)
load("DataMaster_2021.RData")
installed.packages("spikeslab")
install.packages("spikeslab")
install.packages("spikeslab")
view(leukemia)
View(leukemia)
library(spikeslab)
View(leukemia)
View(leukemia)
View(leukemia)
leukemia
load("/DataMaster_2021.RData")
load("DataMaster_2021.RData")
read.csv("DataMaster_2021.RData")
View(leukemia)
library(readr)
leukemia <- read_csv("leukemia.csv")
View(leukemia)
ElPulso <- read.table("~/10132021_bioestadistica/ElPulso.txt", quote="\"", comment.char="")
View(ElPulso)
# Se ha cargado desde la interfaz de R studio la base de datos leukemia.csv
# También el csv de ElPulso
# Factores
ElPulso$Actividad <- factor(ElPulso$Activity, levels=1:3, labels = c("Sauve", "Moderada", "Alta"))
View(ElPuslo)
View(ElPulso)
# Se ha cargado desde la interfaz de R studio la base de datos leukemia.csv
# También el csv de ElPulso
# Factores
ElPulso$Actividad <- factor(ElPulso$Activity, levels=1:3, labels = c("Sauve", "Moderada", "Alta"))
ElPulso$Fumar <- factor(ElPulso$Smokes, levels=1:2, labels = c("Fuma", "No Fuma"))
summary(ElPulso)
# Se ha cargado desde la interfaz de R studio la base de datos leukemia.csv
# También el csv de ElPulso
# Factores
ElPulso$Actividad <- factor(ElPulso$Activity, levels=1:3, labels = c("Sauve", "Moderada", "Alta"))
# Se ha cargado desde la interfaz de R studio la base de datos leukemia.csv
# También el csv de ElPulso
# Factores
factor(ElPulso$Activity, levels=1:3, labels = c("Sauve", "Moderada", "Alta"))
# Se ha cargado desde la interfaz de R studio la base de datos leukemia.csv
# También el csv de ElPulso
# Factores
actividad = factor(ElPulso$Activity, levels=1:3, labels = c("Sauve", "Moderada", "Alta"))
View(ElPulso)
View(ElPulso)
# Se ha cargado desde la interfaz de R studio la base de datos leukemia.csv
# También el csv de ElPulso
# Factores
rm(ElPulso)
library(readr)
ElPulso <- read_table2("C:/Users/fenix/Desktop/10062021_bioestadistica/ElPulso.txt")
View(ElPulso)
# Se ha cargado desde la interfaz de R studio la base de datos leukemia.csv
# También el csv de ElPulso
# Factores
ElPulso$Actividad <- factor(ElPulso$Activity, levels=1:3, labels = c("Sauve", "Moderada", "Alta"))
ElPulso$Fumar <- factor(ElPulso$Smokes, levels=1:2, labels = c("Fuma", "No Fuma"))
summary(ElPulso)
# Inferencia paramétrica: se refiere a la media, la desviación... parametros de la muestra
# Pruebas de conformidad: comprobar si un valor es igual a lo que esperamos o no
View(ElPulso)
# Hacemos un test de conformidad para comprobar si la media de "Pulse1" es igual a 50 (H0) o distinto a 50 (H1)
t.test(ElPulso$Pulse1, mu=50)
rm(actividad)
t.test(ElPulso$Pulse1, mu=50, conf.level = 0.99)
t.test(ElPulso$Pulse2, mu=75)
for (i in 1:10) {
print("xd")
}
for (i in 1:10) {
print("xd")
}
for (i in 1:10) {
print("xd")
}
# Solo las mujeres
t.test(ElPulso$Pulse2[ElPulso$Sexo="Mujer"], mu=75)
View(ElPulso)
ElPulso$Sexo <- factor(ElPulso$Sex, levels=1:2, labels = c("Hombre", "Mujer"))
# Solo las mujeres
t.test(ElPulso$Pulse2[ElPulso$Sexo="Mujer"], mu=75)
# Solo las mujeres
t.test(ElPulso$Pulse2[ElPulso$Sexo=="Mujer"], mu=75)
# Para comprobar si las medias de los pulsos son distintas entre dos grupos, por ejemplo: mujeres y hombres
t.test(ElPulso$Pulse2~ElPulso$Sexo)
# Antes de realizar un test de medias entre dos poblaciones hay que probar que las varianzas de las dos
# muestras sean iguales
var.test(ElPulso$Pulse2~ElPulso$Sexo)
aov(ElPulso)
aov(ElPulso$Pulse1~ElPulso$Actividad)
# Contraste para: la media de pulso 1 entre fumadores y no fumadores.
# H0: las medias son iguales. H1: las medias son distintas
var.test(ElPulso$Pulse1~ElPulso$Fumar)
t.test(ElPulso$Pulse1~ElPulso$Fumar)
View(ElPulso)
save.image("~/10132021_bioestadistica/ElPulso.RData")
